//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.33440。
// 

using Rld.Acs.WpfApplication.Models;

namespace Rld.Acs.WpfApplication.Service.Lisence {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LisenceServiceSoap", Namespace="http://tempuri.org/")]
    public partial class LisenceServiceProxy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback OnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback OfflineOperationCompleted;
        
        /// <remarks/>
        public LisenceServiceProxy()
        {
            this.Url = AppConfiguration.BaseServer +  "/WebService/LisenceService.asmx";
        }
        
        /// <remarks/>
        public event OnlineCompletedEventHandler OnlineCompleted;
        
        /// <remarks/>
        public event OfflineCompletedEventHandler OfflineCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Online", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GenericResult Online(string id, string ip) {
            object[] results = this.Invoke("Online", new object[] {
                        id,
                        ip});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOnline(string id, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Online", new object[] {
                        id,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public GenericResult EndOnline(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void OnlineAsync(string id, string ip) {
            this.OnlineAsync(id, ip, null);
        }
        
        /// <remarks/>
        public void OnlineAsync(string id, string ip, object userState) {
            if ((this.OnlineOperationCompleted == null)) {
                this.OnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnlineOperationCompleted);
            }
            this.InvokeAsync("Online", new object[] {
                        id,
                        ip}, this.OnlineOperationCompleted, userState);
        }
        
        private void OnOnlineOperationCompleted(object arg) {
            if ((this.OnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnlineCompleted(this, new OnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Offline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GenericResult Offline(string id, string ip) {
            object[] results = this.Invoke("Offline", new object[] {
                        id,
                        ip});
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOffline(string id, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Offline", new object[] {
                        id,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public GenericResult EndOffline(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GenericResult)(results[0]));
        }
        
        /// <remarks/>
        public void OfflineAsync(string id, string ip) {
            this.OfflineAsync(id, ip, null);
        }
        
        /// <remarks/>
        public void OfflineAsync(string id, string ip, object userState) {
            if ((this.OfflineOperationCompleted == null)) {
                this.OfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOfflineOperationCompleted);
            }
            this.InvokeAsync("Offline", new object[] {
                        id,
                        ip}, this.OfflineOperationCompleted, userState);
        }
        
        private void OnOfflineOperationCompleted(object arg) {
            if ((this.OfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OfflineCompleted(this, new OfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GenericResult {
        
        private ResultType resultTypeField;
        
        private string[] messagesField;
        
        /// <remarks/>
        public ResultType ResultType {
            get {
                return this.resultTypeField;
            }
            set {
                this.resultTypeField = value;
            }
        }
        
        /// <remarks/>
        public string[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ResultType {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        UserNotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        AuthorizationError,
        
        /// <remarks/>
        UnknownError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void OnlineCompletedEventHandler(object sender, OnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GenericResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GenericResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void OfflineCompletedEventHandler(object sender, OfflineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GenericResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GenericResult)(this.results[0]));
            }
        }
    }
}
