<windows:BaseWindow x:Class="Rld.Acs.WpfApplication.View.Windows.SyncUserView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm= "clr-namespace:Rld.Acs.WpfApplication.ViewModel.Views"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:models="clr-namespace:Rld.Acs.WpfApplication.Models"
             xmlns:AppModels="clr-namespace:Rld.Acs.WpfApplication.Models"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:windows="clr-namespace:Rld.Acs.WpfApplication.View.Windows"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro" Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext= "{d:DesignInstance Type= vm:SyncUserViewModel, IsDesignTimeCreatable=True}"
             ShowMaxRestoreButton="False" ShowMinButton="False" ShowTitleBar="False" WindowStartupLocation="CenterScreen" 
             Height="500" Width="650" Unloaded="MetroWindow_Unloaded">

    <controls:MetroWindow.Resources>
        <Style TargetType="TextBlock"  BasedOn="{StaticResource ResourceKey={x:Type TextBlock}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource ResourceKey={x:Type TextBox}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="2,1" />
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource ResourceKey={x:Type ComboBox}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="2,1" />
        </Style>
        <Style TargetType="DatePicker" BasedOn="{StaticResource ResourceKey={x:Type DatePicker}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="2,1" />
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource ResourceKey={x:Type Button}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Width" Value="75"/>
        </Style>
        <Style TargetType="RadioButton" BasedOn="{StaticResource ResourceKey={x:Type RadioButton}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="2,1" />
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource ResourceKey={x:Type CheckBox}}" >
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="2,1" />
            <Setter Property="Width" Value="150" />
        </Style>
    </controls:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" >
            <TextBlock Text="同步数据" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0"/>
        </DockPanel>
        <Separator Grid.Row="1"  Background="LightGray" />
        <Grid Grid.Row="2" Margin="5" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition />
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" >
                        <TextBlock BaselineOffset="10" Text="*" Foreground="Red" FontWeight="Heavy" Width="5" Margin="2,0"/>
                        <TextBlock Text="同步类型" Margin="0"/>
            </TextBlock>
            <TextBlock Grid.Row="1" Grid.Column="0" >
                        <TextBlock BaselineOffset="10" Text="*" Foreground="Red" FontWeight="Heavy" Width="5" Margin="2,0"/>
                        <TextBlock Text="选择设备" Margin="0"/>
            </TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="0" >
                        <TextBlock BaselineOffset="10" Text="*" Foreground="Red" FontWeight="Heavy" Width="5" Margin="2,0"/>
                        <TextBlock Text="选择人员" Margin="0"/>
            </TextBlock>

            <ComboBox Grid.Row="0" Grid.Column="1" SelectedItem="{Binding SyncUserType}"
                              ItemsSource="{Binding Source={AppModels:EnumBindingSource {x:Type AppModels:SyncUserType}}}" 
                      Width="180" Margin="2,3" HorizontalAlignment="Left"/>

            <Border Grid.Row="1" Grid.Column="1"  BorderBrush="LightGray" BorderThickness="1" Margin="2,8">
                <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding DeviceDtos}" HorizontalAlignment="Stretch">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected}" Content="{Binding DisplayName}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>

            <Grid Grid.Row="2" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="85"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" BorderBrush="LightGray" BorderThickness="1" Margin="2,8">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TreeView Grid.Column="0"  Name="lstDepartment" ItemsSource="{Binding TreeViewSource}">
                            <TreeView.Resources>
                                <Style x:Key="ExpandingImageStyle" TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="{DynamicResource icon_treeitem_closed}"/>
                                    <Setter Property="Width" Value="12" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="0,0,3,0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                                            <Setter Property="Source" Value="{DynamicResource icon_treeitem_opened}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <command:EventToCommand Command="{Binding SelectedTreeNodeChangedCmd}" CommandParameter="{Binding ElementName=lstDepartment,Path=SelectedValue}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type models:TreeViewNode}" ItemsSource="{Binding Path=Children}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Style="{StaticResource ExpandingImageStyle}"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}"></TextBlock>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>

                        <ListBox  Grid.Column="1" ItemsSource="{Binding DepartmentUserDtos}" HorizontalAlignment="Left">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected}" Content="{Binding DisplayName}" Width="Auto"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Border>
                <StackPanel Grid.Column="1" Margin="2,8" VerticalAlignment="Bottom">
                    <Button Command="{Binding MoveToSelectedCmd}" Margin="3">
                        <Image Height="10" Source="{StaticResource icon_right}" />
                    </Button>
                    <Button Command="{Binding RemoveSelectedCmd}" Margin="3">
                        <Image Height="10" Source="{StaticResource icon_left}" />
                    </Button>
                    <TextBlock/>
                    <Button Command="{Binding SelectedAllSourceUserCmd}" Margin="3">
                        <Image Height="10" Source="{StaticResource icon_allLeft}" />
                    </Button>
                    <Button Command="{Binding SelectedAllTargetUserCmd}" Margin="3">
                        <Image Height="10" Source="{StaticResource icon_allRight}" />
                    </Button>
                </StackPanel>
                <Border Grid.Column="2" BorderBrush="LightGray" BorderThickness="1" Margin="2,8">
                    <ListBox ItemsSource="{Binding SelectedSyncUserDtos}" HorizontalAlignment="Left">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected}" Content="{Binding DisplayName}" Width="Auto"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </Grid>

            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"  HorizontalAlignment="Center" Orientation="Horizontal">
                <Button Content="{DynamicResource Ok}" Command="{Binding SaveCmd}" Margin="3,0"/>
                <Button Content="{DynamicResource Cancel}" Command="{Binding CancelCmd}" Margin="3,0"/>
            </StackPanel>
        </Grid>
    </Grid>
</windows:BaseWindow>
