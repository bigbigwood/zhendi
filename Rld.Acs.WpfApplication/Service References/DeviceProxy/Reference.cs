//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rld.Acs.WpfApplication.DeviceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultTypes", Namespace="http://www.realand.com/DeviceSystem/")]
    public enum ResultTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthenticationError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorizationError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataValidationError = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BussinessLogicError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSupportError = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceNotConnected = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queued = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownError = 99,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncOption", Namespace="http://www.realand.com/DeviceSystem/")]
    public enum SyncOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Create = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoorControlOption", Namespace="http://www.realand.com/DeviceSystem/")]
    public enum DoorControlOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auto = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepOpen = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KeepClose = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Close = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelAlarm = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceUserDto", Namespace="http://www.realand.com/DeviceSystem/")]
    [System.SerializableAttribute()]
    public partial class DeviceUserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((this.UserCodeField.Equals(value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.realand.com/DeviceSystem/", ConfigurationName="DeviceProxy.IDeviceService")]
    public interface IDeviceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncSystemUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncSystemUsersResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersResponse SyncSystemUsers(Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncSystemUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncSystemUsersResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersResponse> SyncSystemUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDepartmentUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDepartmentUsersResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersResponse SyncDepartmentUsers(Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDepartmentUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDepartmentUsersResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersResponse> SyncDepartmentUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceUsersResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersResponse SyncDeviceUsers(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceUsersResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersResponse> SyncDeviceUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDevices", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDevicesResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesResponse SyncDevices(Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDevices", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDevicesResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesResponse> SyncDevicesAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceTrafficLogs", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceTrafficLogsResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsResponse SyncDeviceTrafficLogs(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceTrafficLogs", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceTrafficLogsResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsResponse> SyncDeviceTrafficLogsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceOperationLogs", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceOperationLogsRespons" +
            "e")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsResponse SyncDeviceOperationLogs(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceOperationLogs", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncDeviceOperationLogsRespons" +
            "e")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsResponse> SyncDeviceOperationLogsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeGroups", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeGroupsResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsResponse SyncTimeGroups(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeGroups", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeGroupsResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsResponse> SyncTimeGroupsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeSegments", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeSegmentsResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsResponse SyncTimeSegments(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeSegments", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeSegmentsResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsResponse> SyncTimeSegmentsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeZones", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeZonesResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesResponse SyncTimeZones(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeZones", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SyncTimeZonesResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesResponse> SyncTimeZonesAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/GetDoorState", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/GetDoorStateResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateResponse GetDoorState(Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/GetDoorState", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/GetDoorStateResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateResponse> GetDoorStateAsync(Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/UpdateDoorState", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/UpdateDoorStateResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateResponse UpdateDoorState(Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/UpdateDoorState", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/UpdateDoorStateResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateResponse> UpdateDoorStateAsync(Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SearchNewDevices", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SearchNewDevicesResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesResponse SearchNewDevices(Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/SearchNewDevices", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/SearchNewDevicesResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesResponse> SearchNewDevicesAsync(Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/QueryDeviceUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/QueryDeviceUsersResponse")]
        Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersResponse QueryDeviceUsers(Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://www.realand.com/DeviceSystem/IDeviceService/QueryDeviceUsers", ReplyAction="http://www.realand.com/DeviceSystem/IDeviceService/QueryDeviceUsersResponse")]
        System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersResponse> QueryDeviceUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDBUsersRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDBUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.Model.User[] Users;
        
        public SyncDBUsersRequest() {
        }
        
        public SyncDBUsersRequest(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.User[] Users) {
            this.Devices = Devices;
            this.Users = Users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDBUsersResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDBUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncDBUsersResponse() {
        }
        
        public SyncDBUsersResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDepartmentUsersRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDepartmentUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.Department[] Departments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        public SyncDepartmentUsersRequest() {
        }
        
        public SyncDepartmentUsersRequest(Rld.Acs.Model.Department[] Departments, Rld.Acs.Model.DeviceController[] Devices) {
            this.Departments = Departments;
            this.Devices = Devices;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDepartmentUsersResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDepartmentUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncDepartmentUsersResponse() {
        }
        
        public SyncDepartmentUsersResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDeviceUsersRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDeviceUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.WpfApplication.DeviceProxy.SyncOption Option;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=2)]
        public Rld.Acs.Model.User[] Users;
        
        public SyncDeviceUsersRequest() {
        }
        
        public SyncDeviceUsersRequest(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.WpfApplication.DeviceProxy.SyncOption Option, Rld.Acs.Model.User[] Users) {
            this.Devices = Devices;
            this.Option = Option;
            this.Users = Users;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDeviceUsersResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDeviceUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncDeviceUsersResponse() {
        }
        
        public SyncDeviceUsersResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDevicesRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDevicesRequest {
        
        public SyncDevicesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDevicesResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDevicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] NewDeviceControllers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=2)]
        public string[] Messages;
        
        public SyncDevicesResponse() {
        }
        
        public SyncDevicesResponse(Rld.Acs.Model.DeviceController[] NewDeviceControllers, Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.NewDeviceControllers = NewDeviceControllers;
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDeviceTrafficLogsRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDeviceTrafficLogsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        public SyncDeviceTrafficLogsRequest() {
        }
        
        public SyncDeviceTrafficLogsRequest(Rld.Acs.Model.DeviceController[] Devices) {
            this.Devices = Devices;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDeviceTrafficLogsResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDeviceTrafficLogsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncDeviceTrafficLogsResponse() {
        }
        
        public SyncDeviceTrafficLogsResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDeviceOperationLogsRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDeviceOperationLogsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        public SyncDeviceOperationLogsRequest() {
        }
        
        public SyncDeviceOperationLogsRequest(Rld.Acs.Model.DeviceController[] Devices) {
            this.Devices = Devices;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncDeviceOperationLogsResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncDeviceOperationLogsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncDeviceOperationLogsResponse() {
        }
        
        public SyncDeviceOperationLogsResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncTimeGroupsRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncTimeGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.Model.TimeGroup[] TimeGroups;
        
        public SyncTimeGroupsRequest() {
        }
        
        public SyncTimeGroupsRequest(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.TimeGroup[] TimeGroups) {
            this.Devices = Devices;
            this.TimeGroups = TimeGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncTimeGroupsResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncTimeGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncTimeGroupsResponse() {
        }
        
        public SyncTimeGroupsResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncTimeSegmentsRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncTimeSegmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.Model.TimeSegment[] TimeSegments;
        
        public SyncTimeSegmentsRequest() {
        }
        
        public SyncTimeSegmentsRequest(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.TimeSegment[] TimeSegments) {
            this.Devices = Devices;
            this.TimeSegments = TimeSegments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncTimeSegmentsResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncTimeSegmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncTimeSegmentsResponse() {
        }
        
        public SyncTimeSegmentsResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncTimeZonesRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncTimeZonesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController[] Devices;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.Model.TimeZone[] TimeZones;
        
        public SyncTimeZonesRequest() {
        }
        
        public SyncTimeZonesRequest(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.TimeZone[] TimeZones) {
            this.Devices = Devices;
            this.TimeZones = TimeZones;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SyncTimeZonesResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SyncTimeZonesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public SyncTimeZonesResponse() {
        }
        
        public SyncTimeZonesResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDoorStateRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class GetDoorStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public int DeviceCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public int DoorIndex;
        
        public GetDoorStateRequest() {
        }
        
        public GetDoorStateRequest(int DeviceCode, int DoorIndex) {
            this.DeviceCode = DeviceCode;
            this.DoorIndex = DoorIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDoorStateResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class GetDoorStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public bool IsOpened;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=2)]
        public string[] Messages;
        
        public GetDoorStateResponse() {
        }
        
        public GetDoorStateResponse(bool IsOpened, Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.IsOpened = IsOpened;
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDoorStateRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class UpdateDoorStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public int DeviceCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public int DoorIndex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=2)]
        public Rld.Acs.WpfApplication.DeviceProxy.DoorControlOption Option;
        
        public UpdateDoorStateRequest() {
        }
        
        public UpdateDoorStateRequest(int DeviceCode, int DoorIndex, Rld.Acs.WpfApplication.DeviceProxy.DoorControlOption Option) {
            this.DeviceCode = DeviceCode;
            this.DoorIndex = DoorIndex;
            this.Option = Option;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDoorStateResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class UpdateDoorStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string[] Messages;
        
        public UpdateDoorStateResponse() {
        }
        
        public UpdateDoorStateResponse(Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchNewDevicesRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SearchNewDevicesRequest {
        
        public SearchNewDevicesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchNewDevicesResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class SearchNewDevicesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public int[] NewDeviceCodes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=2)]
        public string[] Messages;
        
        public SearchNewDevicesResponse() {
        }
        
        public SearchNewDevicesResponse(int[] NewDeviceCodes, Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.NewDeviceCodes = NewDeviceCodes;
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryDeviceUsersRequest", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class QueryDeviceUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.Model.DeviceController Device;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public string UserCode;
        
        public QueryDeviceUsersRequest() {
        }
        
        public QueryDeviceUsersRequest(Rld.Acs.Model.DeviceController Device, string UserCode) {
            this.Device = Device;
            this.UserCode = UserCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueryDeviceUsersResponse", WrapperNamespace="http://www.realand.com/DeviceSystem/", IsWrapped=true)]
    public partial class QueryDeviceUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=0)]
        public Rld.Acs.WpfApplication.DeviceProxy.DeviceUserDto[] Users;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=1)]
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.realand.com/DeviceSystem/", Order=2)]
        public string[] Messages;
        
        public QueryDeviceUsersResponse() {
        }
        
        public QueryDeviceUsersResponse(Rld.Acs.WpfApplication.DeviceProxy.DeviceUserDto[] Users, Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, string[] Messages) {
            this.Users = Users;
            this.ResultType = ResultType;
            this.Messages = Messages;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceServiceChannel : Rld.Acs.WpfApplication.DeviceProxy.IDeviceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceServiceClient : System.ServiceModel.ClientBase<Rld.Acs.WpfApplication.DeviceProxy.IDeviceService>, Rld.Acs.WpfApplication.DeviceProxy.IDeviceService {
        
        public DeviceServiceClient() {
        }
        
        public DeviceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncSystemUsers(Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersRequest request) {
            return base.Channel.SyncSystemUsers(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncSystemUsers(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.User[] Users, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersRequest();
            inValue.Devices = Devices;
            inValue.Users = Users;
            Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncSystemUsers(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersResponse> SyncSystemUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDBUsersRequest request) {
            return base.Channel.SyncSystemUsersAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncDepartmentUsers(Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersRequest request) {
            return base.Channel.SyncDepartmentUsers(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncDepartmentUsers(Rld.Acs.Model.Department[] Departments, Rld.Acs.Model.DeviceController[] Devices, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersRequest();
            inValue.Departments = Departments;
            inValue.Devices = Devices;
            Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncDepartmentUsers(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersResponse> SyncDepartmentUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDepartmentUsersRequest request) {
            return base.Channel.SyncDepartmentUsersAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncDeviceUsers(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersRequest request) {
            return base.Channel.SyncDeviceUsers(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncDeviceUsers(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.WpfApplication.DeviceProxy.SyncOption Option, Rld.Acs.Model.User[] Users, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersRequest();
            inValue.Devices = Devices;
            inValue.Option = Option;
            inValue.Users = Users;
            Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncDeviceUsers(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersResponse> SyncDeviceUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceUsersRequest request) {
            return base.Channel.SyncDeviceUsersAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncDevices(Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesRequest request) {
            return base.Channel.SyncDevices(request);
        }
        
        public Rld.Acs.Model.DeviceController[] SyncDevices(out Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesRequest();
            Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncDevices(inValue);
            ResultType = retVal.ResultType;
            Messages = retVal.Messages;
            return retVal.NewDeviceControllers;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesResponse> SyncDevicesAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDevicesRequest request) {
            return base.Channel.SyncDevicesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncDeviceTrafficLogs(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsRequest request) {
            return base.Channel.SyncDeviceTrafficLogs(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncDeviceTrafficLogs(Rld.Acs.Model.DeviceController[] Devices, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsRequest();
            inValue.Devices = Devices;
            Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncDeviceTrafficLogs(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsResponse> SyncDeviceTrafficLogsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceTrafficLogsRequest request) {
            return base.Channel.SyncDeviceTrafficLogsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncDeviceOperationLogs(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsRequest request) {
            return base.Channel.SyncDeviceOperationLogs(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncDeviceOperationLogs(Rld.Acs.Model.DeviceController[] Devices, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsRequest();
            inValue.Devices = Devices;
            Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncDeviceOperationLogs(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsResponse> SyncDeviceOperationLogsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncDeviceOperationLogsRequest request) {
            return base.Channel.SyncDeviceOperationLogsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncTimeGroups(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsRequest request) {
            return base.Channel.SyncTimeGroups(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncTimeGroups(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.TimeGroup[] TimeGroups, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsRequest();
            inValue.Devices = Devices;
            inValue.TimeGroups = TimeGroups;
            Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncTimeGroups(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsResponse> SyncTimeGroupsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeGroupsRequest request) {
            return base.Channel.SyncTimeGroupsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncTimeSegments(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsRequest request) {
            return base.Channel.SyncTimeSegments(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncTimeSegments(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.TimeSegment[] TimeSegments, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsRequest();
            inValue.Devices = Devices;
            inValue.TimeSegments = TimeSegments;
            Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncTimeSegments(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsResponse> SyncTimeSegmentsAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeSegmentsRequest request) {
            return base.Channel.SyncTimeSegmentsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SyncTimeZones(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesRequest request) {
            return base.Channel.SyncTimeZones(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes SyncTimeZones(Rld.Acs.Model.DeviceController[] Devices, Rld.Acs.Model.TimeZone[] TimeZones, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesRequest();
            inValue.Devices = Devices;
            inValue.TimeZones = TimeZones;
            Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SyncTimeZones(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesResponse> SyncTimeZonesAsync(Rld.Acs.WpfApplication.DeviceProxy.SyncTimeZonesRequest request) {
            return base.Channel.SyncTimeZonesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.GetDoorState(Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateRequest request) {
            return base.Channel.GetDoorState(request);
        }
        
        public bool GetDoorState(int DeviceCode, int DoorIndex, out Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateRequest();
            inValue.DeviceCode = DeviceCode;
            inValue.DoorIndex = DoorIndex;
            Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).GetDoorState(inValue);
            ResultType = retVal.ResultType;
            Messages = retVal.Messages;
            return retVal.IsOpened;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateResponse> GetDoorStateAsync(Rld.Acs.WpfApplication.DeviceProxy.GetDoorStateRequest request) {
            return base.Channel.GetDoorStateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.UpdateDoorState(Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateRequest request) {
            return base.Channel.UpdateDoorState(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.ResultTypes UpdateDoorState(int DeviceCode, int DoorIndex, Rld.Acs.WpfApplication.DeviceProxy.DoorControlOption Option, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateRequest();
            inValue.DeviceCode = DeviceCode;
            inValue.DoorIndex = DoorIndex;
            inValue.Option = Option;
            Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).UpdateDoorState(inValue);
            Messages = retVal.Messages;
            return retVal.ResultType;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateResponse> UpdateDoorStateAsync(Rld.Acs.WpfApplication.DeviceProxy.UpdateDoorStateRequest request) {
            return base.Channel.UpdateDoorStateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.SearchNewDevices(Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesRequest request) {
            return base.Channel.SearchNewDevices(request);
        }
        
        public int[] SearchNewDevices(out Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesRequest();
            Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).SearchNewDevices(inValue);
            ResultType = retVal.ResultType;
            Messages = retVal.Messages;
            return retVal.NewDeviceCodes;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesResponse> SearchNewDevicesAsync(Rld.Acs.WpfApplication.DeviceProxy.SearchNewDevicesRequest request) {
            return base.Channel.SearchNewDevicesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersResponse Rld.Acs.WpfApplication.DeviceProxy.IDeviceService.QueryDeviceUsers(Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersRequest request) {
            return base.Channel.QueryDeviceUsers(request);
        }
        
        public Rld.Acs.WpfApplication.DeviceProxy.DeviceUserDto[] QueryDeviceUsers(Rld.Acs.Model.DeviceController Device, string UserCode, out Rld.Acs.WpfApplication.DeviceProxy.ResultTypes ResultType, out string[] Messages) {
            Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersRequest inValue = new Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersRequest();
            inValue.Device = Device;
            inValue.UserCode = UserCode;
            Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersResponse retVal = ((Rld.Acs.WpfApplication.DeviceProxy.IDeviceService)(this)).QueryDeviceUsers(inValue);
            ResultType = retVal.ResultType;
            Messages = retVal.Messages;
            return retVal.Users;
        }
        
        public System.Threading.Tasks.Task<Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersResponse> QueryDeviceUsersAsync(Rld.Acs.WpfApplication.DeviceProxy.QueryDeviceUsersRequest request) {
            return base.Channel.QueryDeviceUsersAsync(request);
        }
    }
}
